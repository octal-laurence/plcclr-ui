{"version":3,"file":"static/webpack/static\\development\\pages\\client\\certification-form.js.5a452c93cb8e9b5aa7ca.hot-update.js","sources":["webpack:///./pages/client/certification-form/fingerPrint.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { NextScript } from 'next/document';\r\nimport Head from 'next/head';\r\n\r\nimport Box from '../../ui/box';\r\nimport InputText from '../../ui/inputText';\r\nimport Button from '../../ui/button';\r\n\r\nclass FingerPrint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fingerPrintSubj: '',\r\n    };\r\n\r\n    this.supreme = props.supreme;\r\n    this.renderFingerPrintProjector = this.renderFingerPrintProjector.bind(this);\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.state.fingerPrintSubj !== '') {\r\n      window.REGIONFINGERPRINT.onStart();\r\n      // console.log(window.REGIONFINGERPRINT.onStart());\r\n    }\r\n  }\r\n  renderFingerPrintProjector() {\r\n    const supreme = this.props.supreme;\r\n\r\n    return (\r\n      <Box flexDirection=\"row\">\r\n        <Box\r\n          width=\"50%\"\r\n          borderStyle=\"groove\"\r\n          align=\"center\"\r\n        >\r\n          <Box\r\n            height=\"400px\"\r\n            borderStyle=\"groove\"\r\n          >\r\n            <img\r\n              height=\"396px\"\r\n              width=\"100%\"\r\n              src={supreme.state.applicantFingerPrint.leftThumb}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            <button\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                this.setState({\r\n                  fingerPrintSubj: 'leftThumb',\r\n                });\r\n              }}\r\n            >\r\n              Get Left Thumb\r\n            </button>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          width=\"50%\"\r\n          borderStyle=\"groove\"\r\n          align=\"center\"\r\n        >\r\n          <Box\r\n            height=\"400px\"\r\n            borderStyle=\"groove\"\r\n          >\r\n            <img\r\n              height=\"396px\"\r\n              width=\"100%\"\r\n              src={supreme.state.applicantFingerPrint.leftRight}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            <button\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                this.setState({\r\n                  fingerPrintSubj: 'rightThumb',\r\n                });\r\n              }}\r\n            >\r\n              Get Right Thumb\r\n            </button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n  renderFingerPrintScanner(thumb) {\r\n    const supreme = this.props.supreme;\r\n\r\n    return (\r\n      <Box>\r\n        <Box align=\"right\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={(e) => this.setState({ fingerPrintSubj: '' })}\r\n          >\r\n            close\r\n          </button>\r\n        </Box>\r\n        <Box align=\"center\">\r\n          <h5>Scan {thumb} thumb</h5>\r\n        </Box>\r\n        <Box\r\n          align=\"center\"\r\n          borderStyle=\"groove\"\r\n        >\r\n          <div id=\"Scores\">\r\n            <h5>Scan Quality : <input type=\"text\" id=\"qualityInputBox\" size=\"20\" /></h5> \r\n          </div>\r\n          <div id=\"content-capture\">    \r\n            <div id=\"status\"></div>            \r\n            <Box\r\n              id=\"imagediv\"\r\n              borderStyle=\"groove\"\r\n              height=\"400px\"\r\n              width=\"400px\"\r\n            >\r\n            </Box>\r\n            <div id=\"contentButtons\">\r\n              <input\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                id=\"save\"\r\n                value=\"Save\"\r\n                onClick={(e) => {\r\n                  const localStorage = window.REGIONFINGERPRINT.localStorage;\r\n                  if(localStorage.getItem(\"imageSrc\") == \"\" || localStorage.getItem(\"imageSrc\") == null || document.getElementById('imagediv').innerHTML == \"\"){\r\n                      alert(\"Error -> Fingerprint not available\");\r\n                  }else{\r\n                    supreme.setState({\r\n                      applicantFingerPrint: {\r\n                        ...supreme.state.applicantFingerPrint,\r\n                        [this.state.fingerPrintSubj]: localStorage.getItem(\"imageSrc\"),\r\n                      }\r\n                    }, () => {\r\n                      this.setState({ fingerPrintSubj: '' });\r\n                    });\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div id=\"imageGallery\">\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Box>\r\n          <h3>\r\n            Finger Print\r\n          </h3>\r\n          <p>\r\n            Require Finger Print to be taken.\r\n          </p>\r\n        </Box><hr />\r\n        { (this.state.fingerPrintSubj === '') ?\r\n            this.renderFingerPrintProjector()\r\n            :\r\n            this.renderFingerPrintScanner(this.state.fingerPrintSubj)\r\n        }\r\n        <br />\r\n        <Box>\r\n          <Button\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n              this.supreme.switchPageHandler('applicantSignature');\r\n            }}\r\n          >\r\n            Confirm and Go to Next Tab\r\n          </Button>\r\n        </Box>\r\n        <Head>\r\n          <script src=\"/static/sdk/fingerPrintScanner/lib/jquery.min.js\" />\r\n          <script src=\"/static/sdk/fingerPrintScanner/lib/bootstrap.min.js\" />\r\n          <script src=\"/static/sdk/fingerPrintScanner/scripts/es6-shim.js\" />\r\n          <script src=\"/static/sdk/fingerPrintScanner/scripts/websdk.client.bundle.min.js\" />\r\n          <script src=\"/static/sdk/fingerPrintScanner/scripts/fingerprint.sdk.min.js\" />\r\n          <script src=\"/static/sdk/fingerPrintScanner/customApp.js\" />\r\n        </Head>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FingerPrint;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AARA;AASA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;AADA;AAGA;AANA;AAaA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;AADA;AAGA;AANA;AAcA;;;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAIA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAnBA;AAsBA;AAAA;AAMA;;;AACA;AAAA;AACA;AAAA;AAkBA;AACA;AACA;AACA;AAJA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;;;;AApLA;AACA;AAsLA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}